env {
  NXF_HOME = "/home/springer/zhoux379/git/nf"
  NXF_CACHE = "/scratch.global/zhoux379/nf"
  NXF_EXECUTOR = "qsub"
  NXF_WORK = "$NXF_CACHE/work"
  NXF_TEMP = "$NXF_CACHE/tmp"
  NXF_CONDA_CACHEDIR = "/home/springer/zhoux379/miniconda3/envs"
  NXF_SINGULARITY_CACHEDIR = "$NXF_CACHE/singularity"
  NXF_OPTS = '-Xms1g -Xmx10g'
}

launchDir = "./"
workDir = "$NXF_CACHE/work/test"

includeConfig "$NXF_HOME/configs/nextflow.config"
includeConfig "$NXF_HOME/configs/fastq.config"
includeConfig "$NXF_HOME/configs/rnaseq.config"

params {
  genome = 'Zmays_B73'
  name = 'test'
  design = 'reads.tsv'
  // output locations
  outdir = "./raw"
  qcdir = "./qc"
  s3dir = "./s3"
  source = 'mixed' // one of "local", "sra" or "mixed"
  paired = 'mixed' // one of "SE", "PE" or "mixed"
  strandness = 'no' // one of "no", "forward" or "reverse"
  interleaved = false
  save_fastq = false
  save_trimmed = false
  aligner = "hisat2" // one of "hisat2" or "star"
  saveBAM = false
  skip_preseq = true
  run_salmon = false
  run_stringtie = false
  ase = false
  ril = false
  cage = false
  // send email?
  email = false
  email_on_fail = 'zhoux379@umn.edu'
}

def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}