process.conda = "$NXF_CONDA_CACHEDIR/sarek"

params {
  qcdir = "$proj/reseq/data/11_qc"
  s3dir = "$proj/s3/zhoup-multiqc"
}

process {
  withName:Get_software_versions { executor = 'local' }
  withName:outdoc { executor = 'local' }
  withName:trim {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 15.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:bamsort {
    cpus = { check_max( 4, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 5.h * task.attempt, 'time' ) }
  }
  withName:pseq {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 0.h + 10.h * task.attempt, 'time' ) }
  }
  withName:markdup {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 10.h * task.attempt, 'time' ) }
  }
  withName:mqc {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 5.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 5.h * task.attempt, 'time' ) }
  }
  withName:HaplotypeCaller {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 10.h + 5.h * task.attempt, 'time' ) }
  }
}
