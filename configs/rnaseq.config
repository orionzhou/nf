process.conda = '/home/springer/zhoux379/software/miniconda3/envs/rnaseq'

params {
  aligner = 'hisat2'
  removeRiboRNA = false
  pseudo_aligner = 'salmon'
  qcdir = '/home/springer/zhoux379/projects/rnaseq/data/11_qc'
  webdir = '/home/springer/zhoux379/git/orionzhou.github.io/public/multiqc'
  ase_dir = '/home/springer/zhoux379/projects/reseq/data/cache/vt01/22_bcf'
  ril_sites = '/home/springer/zhoux379/projects/reseq/data/variants/Mo17.tsv.gz'
  ril_sites_idx = '/home/springer/zhoux379/projects/reseq/data/variants/Mo17.tsv.gz.tbi'
  //ril_sites = '/home/springer/zhoux379/projects/reseq/data/variants/H99.tsv.gz'
  //ril_sites_idx = '/home/springer/zhoux379/projects/reseq/data/variants/H99.tsv.gz.tbi'
}

process {
  withName:version { executor = 'local' }
  withName:outdoc { executor = 'local' }
  //withName:hs2Idx {
    //cpus = { check_max( 6, 'cpus' ) }
    //memory = { check_max( 150.GB + 100.GB * task.attempt, 'memory' ) }
    //time = { check_max( 5.h * task.attempt, 'time' ) }
  //}
  withName:trim {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 15.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  //withName:sortmerna {
    //cpus = { check_max( 4, 'cpus' ) }
    //memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    //time = { check_max( 0.h + 10.h * task.attempt, 'time' ) }
    //maxRetries = 2
  //}
  withName:hs2 {
    cpus = { check_max( 4, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 10.h * task.attempt, 'time' ) }
  }
  withName:bamsort {
    cpus = { check_max( 4, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 5.h * task.attempt, 'time' ) }
  }
  withName:pseq {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 0.h + 10.h * task.attempt, 'time' ) }
  }
  withName:markdup {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 10.h * task.attempt, 'time' ) }
  }
  withName:fcnt {
    cpus = { check_max( 4, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 1.h + 5.h * task.attempt, 'time' ) }
  }
  withName:salm {
    cpus = { check_max( 4, 'cpus' ) }
    memory = { check_max( 25.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 0.h + 10.h * task.attempt, 'time' ) }
  }
  withName:ase2 {
    cpus = { check_max( 4, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 1.h + 5.h * task.attempt, 'time' ) }
  }
  withName:mqc {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 5.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 5.h + 5.h * task.attempt, 'time' ) }
  }
  withName:ril1 {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 30.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 20.h + 10.h * task.attempt, 'time' ) }
  }
  withName:ril2 {
    cpus = { check_max( 1, 'cpus' ) }
    memory = { check_max( 20.GB + 10.GB * task.attempt, 'memory' ) }
    time = { check_max( 10.h + 10.h * task.attempt, 'time' ) }
  }
}
